import PinModel from '../models/pin';

export class GetVote {
    constructor(){
        this.getvote;
    }

    getvote(req, res, next){
        return res.status(200).json({
            message: 'Welcome to the voting platform'
        });
    }
}

/**
 * Authenticate the Voter with the Pin generated by the admin of 
 * the voter and the voter name, if the authentication process is successful,
 * then the user can be redirected to the voting page
 */
export class AuthVoter {
    constructor(){
        this.loginVoter;
    }

    loginVoter(req, res,next){
        const VoterDetails = {
            pin: req.body.pin,
            name: req.body.name
        }

        PinModel.findOne({voter_pin: VoterDetails.pin}).then( result => {
            if(!result){
                return res.status(404).json({
                    message: 'Pin supplied not found, please input the correct pin or contact your provider'
                })
            }else{
                if( result.voter_name === VoterDetails.name){

                }else {
                    return res.status(401).json({
                        message: 'Name supplied does not match the Pin provided'
                    });
                }
            }

        }).catch( err => {
            if(!err.statusCode){
                err.statusCode = 500;
            }
            next(err);
        })
    }
}

export class StartVote {
    constructor(){
        this.vote;
    }

    vote(req, res, next){

    }
}